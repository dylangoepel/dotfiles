#!/bin/bash
set ${1:-get}

function get_volume {
  pactl list sinks | grep Volume | head -n 1 | cut -d/ -f 2 | sed -s "s, ,,g" | tr -d "%"
}

function is_mute {
  [ $(pactl list sinks | grep Mute | sed "s,\s,,g" | cut -d: -f 2) == "yes" ]
}

function set_volume {
    for sink in $(pactl list sinks | grep "^Sink" | grep -Eo "[0-9]+")
    do
        pactl set-sink-volume $sink $1
    done
}

function set_mute {
    for sink in $(pactl list sinks | grep "^Sink" | grep -Eo "[0-9]+")
    do
        pactl set-sink-mute $sink toggle
    done
}

function send_notification {
  iconSound="audio-volume-high"
  iconMuted="audio-volume-muted"
  volume=$(get_volume)
  is_mute && dunstify -a "Volume updated." -i $iconMuted -r 2593 -u normal "0%" || dunstify -a "Volume updated." -i $iconSound -r 2593 -u normal "$volume%"
}
 
sinks=$(pacmd list-sinks | grep index | sed "s,.*index: ,,g")

if [[ $1 == "cycle" ]]
then
    current=$(pactl list sink-inputs | grep "Sink:" | head -n 1 | tr -d "\t" | sed "s,Sink: ,,g")
    lastSink=$(echo $sinks | grep -Eo "[0-9]+ {0,1}$")

    new=$(( ($current + 1) % ($lastSink + 1) ))
    echo $current
    echo $new

    inputs=$(pactl list sink-inputs | grep "Sink Input #" | sed "s,Sink Input #,,g")

    for input in $inputs
    do
        pactl move-sink-input $input $new
    done
    dunstify -a "Volume" -i audio-volume-high -r 2593 "Changed output."
fi

for sink in $sinks
do
    if [[ $1 == "inc" ]]
    then
        set_volume +2%
        send_notification
    elif [[ $1 == "dec" ]]
    then
        set_volume -2%
        send_notification
    elif [[ $1 == "mute" ]]
    then
        set_mute
        send_notification
    elif [[ $1 == "get" ]]
    then
        pactl list sinks | tr -d "\t" | grep ^Volume | cut -d"/" -f 2 | tr -d " "
    fi
done
